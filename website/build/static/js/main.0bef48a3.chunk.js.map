{"version":3,"sources":["logo.svg","firebase.js","Crud.js","Data.js","LoginPage.js","Components/CommentsSection.js","Components/PageWrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Crud","Component","props","logOut","auth","signOut","messageHandler","err","console","log","retrieve","snapShot","val","create","state","id","path","database","ref","set","read","once","then","update","data","snapshot","setState","del","remove","name","age","src","logo","className","alt","style","width","height","verticalAlign","onClick","e","marginLeft","type","value","this","onChange","target","LoginPage","uid","email","password","loggedIn","userid","signInWithEmailAndPassword","catch","error","code","message","onAuthStateChanged","user","displayName","emailVerified","photoURL","isAnonymous","providerData","CommentsSection","backgroundImage","class","href","PageWrapper","role","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bef48a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAk2G45MO-if6VYZk_kypt5dvTCNkPzoyw\",\r\n    authDomain: \"dsid-gp5.firebaseapp.com\",\r\n    databaseURL: \"https://dsid-gp5.firebaseio.com\",\r\n    projectId: \"dsid-gp5\",\r\n    storageBucket: \"dsid-gp5.appspot.com\",\r\n    messagingSenderId: \"1022571067612\",\r\n    appId: \"1:1022571067612:web:b4a1f9d227771120e4dc19\",\r\n    measurementId: \"G-BHVWHBKHCW\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;","import React, {Component} from 'react';\r\nimport firebase from './firebase';\r\nimport logo from './logo.svg';\r\nimport Data from './Data';\r\n\r\nclass Crud extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // firebase.auth().onAuthStateChanged(function(user){\r\n        //     if(!user) {\r\n        //         window.location.replace(\"login.html\");\r\n        //     }\r\n        // });\r\n\r\n        this.state = {\r\n            id: null,\r\n            name: null,\r\n            age: null\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" style={{width:100,height:100,verticalAlign:\"middle\"}}/>\r\n                    Flight Website\r\n                    <button onClick={(e) => this.logOut()} style={{marginLeft:500}}>logOut</button>\r\n                </h1>\r\n                \r\n                <div className=\"App-content\">\r\n                    <h2>CRUD</h2>\r\n                    <div>\r\n                        \r\n                            <label>\r\n                            ID: \r\n                            <input type=\"text\" value={this.state.id} onChange={e => this.setState({id: e.target.value})} />\r\n                            </label>\r\n                            <label>\r\n                            Nome: \r\n                            <input type=\"text\" value={this.state.name} onChange={e => this.setState({name: e.target.value})} />\r\n                            </label>\r\n                            <label>\r\n                            Idade: \r\n                            <input type=\"text\" value={this.state.age} onChange={e => this.setState({age: e.target.value})} />\r\n                            </label>\r\n                            \r\n                    </div>\r\n                    <div>\r\n                        <button onClick={(e) => this.create()}>Create</button>\r\n                        <button onClick={(e) => this.read()}>Read</button>\r\n                        <button onClick={(e) => this.update()}>Update</button>\r\n                        <button onClick={(e) => this.del()}>Delete</button>\r\n                    </div>\r\n\r\n                    {/* <Data /> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    logOut = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    messageHandler = (err) => {\r\n        if(!!err){\r\n            console.log(err)\r\n        }else{\r\n            console.log(\"Success!\")\r\n        }\r\n    }\r\n\r\n    retrieve = (snapShot) => {\r\n        if(!!snapShot && !!snapShot.val()){\r\n            console.log(snapShot.val());\r\n        }else{\r\n            console.log('No data found');\r\n        }\r\n    }\r\n\r\n    create = () => {\r\n        if(!this.state.id) return;\r\n\r\n        let path = 'users/' + this.state.id;\r\n        \r\n        firebase.database().ref(path).set(this.state, this.messageHandler);\r\n    }\r\n\r\n    read = () => {\r\n        if(!this.state.id || !this.messageHandler) return;\r\n\r\n        let path = 'users/' + this.state.id;\r\n\r\n        firebase.database().ref(path).once('value').then(this.retrieve, this.messageHandler);\r\n    }\r\n\r\n    update = () => {\r\n        if(!this.state.id) return;\r\n\r\n        let path = 'users/' + this.state.id;\r\n        let data = null;\r\n\r\n        firebase.database().ref(path).once('value')\r\n        .then((snapshot) => {\r\n            data = snapshot.val\r\n        }, this.messageHandler);\r\n\r\n        this.setState(data)\r\n        \r\n        firebase.database().ref(path).update(this.state, this.messageHandler);\r\n    }\r\n\r\n    del = () => {\r\n        if(!this.state.id) return;\r\n\r\n        let path = 'users/' + this.state.id;\r\n        \r\n        firebase.database().ref(path).remove(this.messageHandler);\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Crud;","import React, {Component} from 'react';\r\nimport firebase from './firebase';\r\n\r\nclass Data extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        // let ref = firebase\r\n        //  .database()\r\n        //  .ref('teste/');\r\n\r\n        //  let path = 'teste/' + this.state.id;\r\n\r\n        // firebase.database().ref(path).once('value').then(this.retrieve, this.messageHandler);\r\n\r\n        // ref.once(\"value\").then(dataSnapshot => {\r\n        //   this.response = dataSnapshot.val();\r\n        //   console.log(this.response);\r\n        //   console.log(dataSnapshot);\r\n        //   //once the data is back, set the loading to false so it can be rendered\r\n        //   this.setState({ data: this.response});\r\n        // });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                this.state.data ?\r\n                    <ul>\r\n                        {this.state.data.map(function(item, i){\r\n                            console.log(item);\r\n                            return  <li key={i}>ID: {item.id} Nome: {item.name} Idade: {item.age}</li>\r\n                        })}\r\n                    </ul>\r\n                :\r\n                    null\r\n        )\r\n    }\r\n}\r\n\r\nexport default Data;","import React,{Component} from 'react';\r\nimport firebase from './firebase';\r\nimport Crud from './Crud';\r\n\r\nclass LoginPage extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            uid: null,\r\n            email: null,\r\n            password: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // var provider = new firebase.auth.GoogleAuthProvider();\r\n        const login = () => {\r\n            // firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            //     // This gives you a Google Access Token. You can use it to access the Google API.\r\n            //     var token = result.credential.accessToken;\r\n            //     // The signed-in user info.\r\n            //     var user = result.user;\r\n            //     console.log(user)\r\n            //     // ...\r\n            //   }).catch(function(error) {\r\n            //     // Handle Errors here.\r\n            //     var errorCode = error.code;\r\n            //     var errorMessage = error.message;\r\n            //     console.log(errorMessage)\r\n            //     // The email of the user's account used.\r\n            //     var email = error.email;\r\n            //     // The firebase.auth.AuthCredential type that was used.\r\n            //     var credential = error.credential;\r\n            //     // ...\r\n            //   });\r\n\r\n            firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).catch(function(error) {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // ...\r\n              });\r\n            \r\n            firebase.auth().onAuthStateChanged(function(user) {\r\n                if (user) {\r\n                    loggedIn(user.uid);\r\n                    // User is signed in.\r\n                    var displayName = user.displayName;\r\n                    var email = user.email;\r\n                    var emailVerified = user.emailVerified;\r\n                    var photoURL = user.photoURL;\r\n                    var isAnonymous = user.isAnonymous;\r\n                    var uid = user.uid;\r\n                    var providerData = user.providerData;\r\n                    // ...\r\n                } else {\r\n                    // User is signed out.\r\n                    // ...\r\n                }\r\n            });\r\n        }\r\n\r\n        let loggedIn = (userid) => {\r\n            this.setState({\r\n                uid: userid\r\n            })\r\n        }\r\n\r\n        return(\r\n            !this.state.uid ?\r\n                <div>\r\n                    <h1>Login</h1>\r\n                    <div id=\"firebaseui-auth-container\"></div>\r\n                    <div>\r\n                    <label>\r\n                    Email: \r\n                    <input type=\"text\" value={this.state.email} onChange={e => this.setState({email: e.target.value})} />\r\n                    </label>\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                    Senha: \r\n                    <input type=\"text\" value={this.state.password} onChange={e => this.setState({password: e.target.value})} />\r\n                    </label>\r\n                    </div>\r\n                    <button onClick={(e) => login()}>Sign In</button>\r\n                    <script src='login.js'></script>\r\n                </div>\r\n            :\r\n                <Crud uid={this.state.uid} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React, {Component} from 'react';\r\n\r\nclass CommentsSection extends Component {\r\n    render(){\r\n        return(\r\n            <div id=\"fh5co-testimonial\" style={{backgroundImage: \"%PUBLIC_URL%/images/img_bg_1.jpg\"}}>\r\n                <div class=\"container\">\r\n                    <div class=\"row animate-box\">\r\n                        <div class=\"col-md-8 col-md-offset-2 text-center fh5co-heading\">\r\n                            <h2>Happy Clients</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"box-testimony animate-box\">\r\n                                <blockquote>\r\n                                    <span class=\"quote\"><span><i class=\"icon-quotes-right\"></i></span></span>\r\n                                    <p>&ldquo;Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.&rdquo;</p>\r\n                                </blockquote>\r\n                                <p class=\"author\">John Doe, CEO <a href=\"http://freehtml5.co/\" target=\"_blank\">FREEHTML5.co</a> <span class=\"subtext\">Creative Director</span></p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"box-testimony animate-box\">\r\n                                <blockquote>\r\n                                    <span class=\"quote\"><span><i class=\"icon-quotes-right\"></i></span></span>\r\n                                    <p>&ldquo;Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.&rdquo;</p>\r\n                                </blockquote>\r\n                                <p class=\"author\">John Doe, CEO <a href=\"http://freehtml5.co/\" target=\"_blank\">FREEHTML5.co</a> <span class=\"subtext\">Creative Director</span></p>\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"box-testimony animate-box\">\r\n                                <blockquote>\r\n                                    <span class=\"quote\"><span><i class=\"icon-quotes-right\"></i></span></span>\r\n                                    <p>&ldquo;Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.&rdquo;</p>\r\n                                </blockquote>\r\n                                <p class=\"author\">John Doe, Founder <a href=\"#\">FREEHTML5.co</a> <span class=\"subtext\">Creative Director</span></p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentsSection;","import React, {Component} from 'react';\r\nimport CommentsSection from './CommentsSection';\r\n\r\nclass PageWrapper extends Component {\r\n    render(){\r\n        return(\r\n            <div id=\"fh5co-wrapper\">\r\n            <div id=\"fh5co-page\">\r\n                <header id=\"fh5co-header-section\" class=\"sticky-banner\">\r\n                    <div class=\"container\">\r\n                        <div class=\"nav-header\">\r\n                            <a href=\"#\" class=\"js-fh5co-nav-toggle fh5co-nav-toggle dark\"><i></i></a>\r\n                            <h1 id=\"fh5co-logo\"><a href=\"index.html\"><i class=\"icon-airplane\"></i>Travel</a></h1>\r\n                            {/*<!-- START #fh5co-menu-wrap -->*/}\r\n                            <nav id=\"fh5co-menu-wrap\" role=\"navigation\">\r\n                                <ul class=\"sf-menu\" id=\"fh5co-primary-menu\">\r\n                                    <li class=\"active\"><a href=\"index.html\">Home</a></li>\r\n                                    <li>\r\n                                        <a href=\"vacation.html\" class=\"fh5co-sub-ddown\">Vacations</a>\r\n                                        <ul class=\"fh5co-sub-menu\">\r\n                                            <li><a href=\"#\">Family</a></li>\r\n                                            <li><a href=\"#\">CSS3 &amp; HTML5</a></li>\r\n                                            <li><a href=\"#\">Angular JS</a></li>\r\n                                            <li><a href=\"#\">Node JS</a></li>\r\n                                            <li><a href=\"#\">Django &amp; Python</a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li><a href=\"flight.html\">Flights</a></li>\r\n                                    <li><a href=\"hotel.html\">Hotel</a></li>\r\n                                    <li><a href=\"car.html\">Car</a></li>\r\n                                    <li><a href=\"blog.html\">Blog</a></li>\r\n                                    <li><a href=\"contact.html\">Contact</a></li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n\r\n            <CommentsSection />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageWrapper","import React, {Component} from 'react';\nimport './App.css';\nimport LoginPage from './LoginPage';\nimport PageWrapper from './Components/PageWrapper';\n\n\nclass App extends Component{\n  render(){\n    return(\n      <div className=\"App\">\n        <LoginPage />\n        <PageWrapper />\n      </div>\n    )\n  }\n  \n}\n\nexport default App;\n\n// https://medium.com/reprogramabr/configura%C3%A7%C3%B5es-iniciais-do-firebase-realtime-database-com-reactjs-f76141eed5d9","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}